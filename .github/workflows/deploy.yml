# .github/workflows/deploy.yml
# Automatischer Azure-Deploy mit Login, Cleanup und WebApp-Deployment

name: ‚ú® Deploy LandKI Bot

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Quellcode aus GitHub-Repository holen
      - name: üìÇ Checkout repository
        uses: actions/checkout@v3

      # 2. Login bei Azure mit Service Principal (gespeichert als AZURE_CREDENTIALS)
      - name: üîê Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3. Optional: Vor Deployment alte Dateien entfernen (per Kudu API)
      - name: ü¶Ñ Clean wwwroot before deployment (via Kudu API)
        run: |
          curl -X POST "https://${{ env.AZURE_WEBAPP_NAME }}.scm.azurewebsites.net/api/command" \
            -H "Authorization: Bearer ${{ secrets.KUDU_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"command":"rm -rf site/wwwroot/*"}'
        env:
          AZURE_WEBAPP_NAME: landki-bot-app
        continue-on-error: true  # Bei Fehler trotzdem fortfahren

      # 4. Deploy zur Azure Web App (Python Flask App)
      - name: üåê Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'landki-bot-app'
          slot-name: 'production'
          package: .
